Add a Child#Menu Name
osg::Node		#Menu Super Class
osg::Group		#operand type
[SUBJECT]->addChild([OPERAND]);		#ADD Action   
[SUBJECT]->removeChild([OPERAND]);[SUBJECT]->dirtyBound()		#DEL Action  
Set Light#Menu Name
osg::Light
osg::LightSource
[SUBJECT]->setLight([OPERAND]);		#ADD Action   
[SUBJECT]->setLight(0)		#DEL Action  
setShadowTechnique#Menu Name
osgShadow::ShadowTechnique		#Menu Super Class
osgShadow::ShadowedScene		#operand type
[SUBJECT]->setShadowTechnique([OPERAND]);		#ADD Action   
[SUBJECT]->setShadowTechnique(0)		#DEL Action  
Add Shader#Menu Name
osg::Shader		#Menu Super Class
osg::Program		#operand type
[SUBJECT]->addShader([OPERAND]);		#ADD Action   
[SUBJECT]->removeShader([OPERAND]);	#DEL Action   
Add a StateAttrib#Menu Name
osg::StateAttribute
osg::StateSet
[SUBJECT]->setAttributeAndModes([OPERAND],osg::StateAttribute::OVERRIDE|osg::StateAttribute::ON); 
[SUBJECT]->removeAttribute([OPERAND])		#DEL Action   
Add Uniform#Menu Name
osg::Uniform
osg::StateSet
[SUBJECT]->addUniform([OPERAND]); 
[SUBJECT]->removeUniform([OPERAND])		#DEL Action   
Add Update Callback#Menu Name
osg::NodeCallback
osg::Node
[SUBJECT]->addUpdateCallback([OPERAND]) 	#ADD Action  
[SUBJECT]->removeUpdateCallback([OPERAND])	#DEL Action   
Create NodeVisitor#Menu Name
osg::NodeVisitor	#Menu Super Class
osg::Node		#operand type
 #accept(*		#do nothing as most visitors need some configuration before to be accepted 
			#DEL Action   
Add StateSet#Menu Name
osg::StateSet		#Menu Super Class
osg::Drawable		#operand type
[SUBJECT]->setStateSet([OPERAND]) 
[SUBJECT]->setStateSet(0)			#DEL Action (not symetric) SetStateSet(0) by yourself  
Set StateSet#Menu Name
osg::StateSet		#Menu Super Class
osg::Node		#operand type
[SUBJECT]->setStateSet([OPERAND]) 
[SUBJECT]->setStateSet(0)			#DEL Action (not symetric) SetStateSet(0) by yourself  
Add a Drawable#Menu Name
osg::Drawable		#Menu Super Class
osg::Geode		#operand type
[SUBJECT]->addDrawable([OPERAND]) #ADD Action  
[SUBJECT]->removeDrawable([OPERAND])	#DEL Action   
Add a SoundState#Menu Name            LESS GENERIC ACTION
osgAudio::SoundState		#Menu Super Class
osgAudio::SoundUpdateCB		#operand type
[SUBJECT]->setSoundState([OPERAND]) #ADD Action   
[SUBJECT]->setSoundState(0)		#DEL Action   
Add a Particle System#Menu Name            LESS GENERIC ACTION
osgParticle::ParticleSystem		#Menu Super Class
osgParticle::ParticleSystemUpdater		#operand type
[SUBJECT]->addParticleSystem([OPERAND]) 
[SUBJECT]->removeParticleSystem([OPERAND])		#DEL Action   
Set Particle System#Menu Name            LESS GENERIC ACTION
osgParticle::ParticleSystem		#Menu Super Class
osgParticle::Emitter		#operand type
[SUBJECT]->setParticleSystem([OPERAND]) 
[SUBJECT]->setParticleSystem(0)		#DEL Action  
Set ParticleSystem#Menu Name            LESS GENERIC ACTION
osgParticle::ParticleSystem		#Menu Super Class
osgParticle::Program		#operand type
[SUBJECT]->setParticleSystem([OPERAND]) 
[SUBJECT]->setParticleSystem(0)			#DEL Action 
set Normal Texture#
osg::Texture2D
osgFX::BumpMapping
[SUBJECT]->setOverrideNormalMapTexture([OPERAND]) 
[SUBJECT]->setOverrideNormalMapTexture(0) 
set Diffuse Texture#
osg::Texture2D
osgFX::BumpMapping
[SUBJECT]->setOverrideDiffuseTexture([OPERAND]) 
[SUBJECT]->setOverrideDiffuseTexture(0) 
